/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 ./public/dazzling donuts.gltf -ts 
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { LayerMaterial, Texture } from "lamina";
import { useLoader } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    pink_cream: THREE.Mesh;
    bread: THREE.Mesh;
    Torus001: THREE.Mesh;
    bread001: THREE.Mesh;
    BezierCurve: THREE.Mesh;
    Torus007: THREE.Mesh;
    bread002: THREE.Mesh;
    Torus002: THREE.Mesh;
    Torus003: THREE.Mesh;
    Sphere: THREE.Mesh;
    pink_cream001: THREE.Mesh;
    bread003: THREE.Mesh;
    pink_cream002: THREE.Mesh;
    bread004: THREE.Mesh;
    pink_cream003: THREE.Mesh;
    bread005: THREE.Mesh;
    Cone: THREE.Mesh;
    Plane: THREE.Mesh;
  };
  materials: {
    chocolate: THREE.MeshStandardMaterial;
    bread: THREE.MeshStandardMaterial;
    Material: THREE.MeshStandardMaterial;
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.004"]: THREE.MeshStandardMaterial;
    ["Material.005"]: THREE.MeshStandardMaterial;
    ["blue marble"]: THREE.MeshStandardMaterial;
    ["Material.003"]: THREE.MeshStandardMaterial;
    caramel: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;


export function Donut() {
  const { nodes, materials } = useGLTF("/dazzling donuts.gltf") as GLTFResult;
  const texture = useLoader(THREE.TextureLoader, "/texture/breat_texture2.jpg");
  const raspberry = useLoader(THREE.TextureLoader, "/texture/rasp.jpg");
  const raspberryRing = useLoader(THREE.TextureLoader, "/texture/raspberry.jpg");
  const marble = useLoader(THREE.TextureLoader, "/texture/marble_blue.jpg");

  

  return (
    <group dispose={null}>

      {/* BREAD */}
      <mesh castShadow receiveShadow geometry={nodes.bread.geometry}>
        <LayerMaterial
          color="#d18865" //
          lighting="standard"
          bumpMap={texture}
          bumpScale={0.005}
        >
          <Texture map={texture} alpha={0.6} />
        </LayerMaterial>
      </mesh>


      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Torus001.geometry}
        material={materials.Material}
      >
        <LayerMaterial
          color="#d18865" //
          lighting="standard"
        >
          <Texture map={raspberry} alpha={1} />
        </LayerMaterial>
      </mesh>
      {/* <mesh
        castShadow
        receiveShadow
        geometry={nodes.bread001.geometry}
        material={materials.bread}
      /> */}

      {/* RING */}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Torus007.geometry}
        material={materials["Material.001"]}
      >
        <meshStandardMaterial map={raspberryRing} bumpScale={0.01} roughness={0} transparent={true} metalness={0.3} bumpMap={raspberryRing} />
      </mesh>

      {/* SMALL BREAD */}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.bread002.geometry}
        material={materials.bread}
      />

      {/* YOLK DONUT */}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Torus002.geometry}
        material={materials["Material.004"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Torus003.geometry}
        material={materials["Material.004"]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere.geometry}
        material={materials["Material.005"]}
      />

      
      {/* <mesh
        castShadow
        receiveShadow
        geometry={nodes.bread003.geometry}
        material={materials["blue marble"]}
      /> */}


      {/* PINK CREAM */}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pink_cream002.geometry}
        material={materials["Material.003"]}
      />


      {/* <mesh
        castShadow
        receiveShadow
        geometry={nodes.bread004.geometry}
        material={materials.bread}
      /> */}

      {/* SCULPTED CREAM */}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pink_cream003.geometry}
        material={materials.caramel}
      />
      
      {/* CONE BREAD */}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cone.geometry}
        material={materials.bread}
      />
    </group>
  );
}

useGLTF.preload("/dazzling donuts.gltf");
